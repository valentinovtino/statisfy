// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App matches snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    storeFood={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="fave"
>
          <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    className="food-btn fave-btn"
                    onClick={[Function]}
                    to="/fave"
          >
                    My Kitchen
          </NavLink>
</div>,
        <NavLink
          activeClassName="active"
          ariaCurrent="true"
          className="App-title"
          to="/"
>
          SATISFY
</NavLink>,
        <p
          className="slogan"
>
          What're you craving?..
</p>,
        <div>
          <div
                    className="navs"
          >
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              className="food-btn sweet-btn"
                              onClick={[Function]}
                              to="/sweet"
                    >
                              SWEET
                    </NavLink>
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              className="food-btn savory-btn"
                              onClick={[Function]}
                              to="/savory"
                    >
                              SAVORY
                    </NavLink>
                    <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              className="food-btn nutty-btn"
                              onClick={[Function]}
                              to="/nutty"
                    >
                              NUTTY
                    </NavLink>
          </div>
          <withRouter(Connect(foodHolder))
                    allState={
                              Object {
                                        "click": false,
                                        "test": "testing",
                                      }
                    }
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/sweet"
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/savory"
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/nutty"
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/fave"
          />
          <Route
                    component={[Function]}
                    exact={true}
                    path="/"
          />
</div>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="food-btn fave-btn"
            onClick={[Function]}
            to="/fave"
>
            My Kitchen
</NavLink>,
          "className": "fave",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "ariaCurrent": "true",
            "children": "My Kitchen",
            "className": "food-btn fave-btn",
            "onClick": [Function],
            "to": "/fave",
          },
          "ref": null,
          "rendered": "My Kitchen",
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "activeClassName": "active",
          "ariaCurrent": "true",
          "children": "SATISFY",
          "className": "App-title",
          "to": "/",
        },
        "ref": null,
        "rendered": "SATISFY",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "What're you craving?..",
          "className": "slogan",
        },
        "ref": null,
        "rendered": "What're you craving?..",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="navs"
>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            className="food-btn sweet-btn"
                            onClick={[Function]}
                            to="/sweet"
              >
                            SWEET
              </NavLink>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            className="food-btn savory-btn"
                            onClick={[Function]}
                            to="/savory"
              >
                            SAVORY
              </NavLink>
              <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            className="food-btn nutty-btn"
                            onClick={[Function]}
                            to="/nutty"
              >
                            NUTTY
              </NavLink>
</div>,
            <withRouter(Connect(foodHolder))
              allState={
                            Object {
                                          "click": false,
                                          "test": "testing",
                                        }
              }
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/sweet"
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/savory"
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/nutty"
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/fave"
/>,
            <Route
              component={[Function]}
              exact={true}
              path="/"
/>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  className="food-btn sweet-btn"
                  onClick={[Function]}
                  to="/sweet"
>
                  SWEET
</NavLink>,
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  className="food-btn savory-btn"
                  onClick={[Function]}
                  to="/savory"
>
                  SAVORY
</NavLink>,
                <NavLink
                  activeClassName="active"
                  ariaCurrent="true"
                  className="food-btn nutty-btn"
                  onClick={[Function]}
                  to="/nutty"
>
                  NUTTY
</NavLink>,
              ],
              "className": "navs",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": "SWEET",
                  "className": "food-btn sweet-btn",
                  "onClick": [Function],
                  "to": "/sweet",
                },
                "ref": null,
                "rendered": "SWEET",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": "SAVORY",
                  "className": "food-btn savory-btn",
                  "onClick": [Function],
                  "to": "/savory",
                },
                "ref": null,
                "rendered": "SAVORY",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "activeClassName": "active",
                  "ariaCurrent": "true",
                  "children": "NUTTY",
                  "className": "food-btn nutty-btn",
                  "onClick": [Function],
                  "to": "/nutty",
                },
                "ref": null,
                "rendered": "NUTTY",
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "allState": Object {
                "click": false,
                "test": "testing",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/sweet",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/savory",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/nutty",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/fave",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "exact": true,
              "path": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="fave"
>
            <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        className="food-btn fave-btn"
                        onClick={[Function]}
                        to="/fave"
            >
                        My Kitchen
            </NavLink>
</div>,
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="App-title"
            to="/"
>
            SATISFY
</NavLink>,
          <p
            className="slogan"
>
            What're you craving?..
</p>,
          <div>
            <div
                        className="navs"
            >
                        <NavLink
                                    activeClassName="active"
                                    ariaCurrent="true"
                                    className="food-btn sweet-btn"
                                    onClick={[Function]}
                                    to="/sweet"
                        >
                                    SWEET
                        </NavLink>
                        <NavLink
                                    activeClassName="active"
                                    ariaCurrent="true"
                                    className="food-btn savory-btn"
                                    onClick={[Function]}
                                    to="/savory"
                        >
                                    SAVORY
                        </NavLink>
                        <NavLink
                                    activeClassName="active"
                                    ariaCurrent="true"
                                    className="food-btn nutty-btn"
                                    onClick={[Function]}
                                    to="/nutty"
                        >
                                    NUTTY
                        </NavLink>
            </div>
            <withRouter(Connect(foodHolder))
                        allState={
                                    Object {
                                                "click": false,
                                                "test": "testing",
                                              }
                        }
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/sweet"
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/savory"
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/nutty"
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/fave"
            />
            <Route
                        component={[Function]}
                        exact={true}
                        path="/"
            />
</div>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <NavLink
              activeClassName="active"
              ariaCurrent="true"
              className="food-btn fave-btn"
              onClick={[Function]}
              to="/fave"
>
              My Kitchen
</NavLink>,
            "className": "fave",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "ariaCurrent": "true",
              "children": "My Kitchen",
              "className": "food-btn fave-btn",
              "onClick": [Function],
              "to": "/fave",
            },
            "ref": null,
            "rendered": "My Kitchen",
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "activeClassName": "active",
            "ariaCurrent": "true",
            "children": "SATISFY",
            "className": "App-title",
            "to": "/",
          },
          "ref": null,
          "rendered": "SATISFY",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "What're you craving?..",
            "className": "slogan",
          },
          "ref": null,
          "rendered": "What're you craving?..",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="navs"
>
                <NavLink
                                activeClassName="active"
                                ariaCurrent="true"
                                className="food-btn sweet-btn"
                                onClick={[Function]}
                                to="/sweet"
                >
                                SWEET
                </NavLink>
                <NavLink
                                activeClassName="active"
                                ariaCurrent="true"
                                className="food-btn savory-btn"
                                onClick={[Function]}
                                to="/savory"
                >
                                SAVORY
                </NavLink>
                <NavLink
                                activeClassName="active"
                                ariaCurrent="true"
                                className="food-btn nutty-btn"
                                onClick={[Function]}
                                to="/nutty"
                >
                                NUTTY
                </NavLink>
</div>,
              <withRouter(Connect(foodHolder))
                allState={
                                Object {
                                                "click": false,
                                                "test": "testing",
                                              }
                }
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/sweet"
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/savory"
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/nutty"
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/fave"
/>,
              <Route
                component={[Function]}
                exact={true}
                path="/"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    className="food-btn sweet-btn"
                    onClick={[Function]}
                    to="/sweet"
>
                    SWEET
</NavLink>,
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    className="food-btn savory-btn"
                    onClick={[Function]}
                    to="/savory"
>
                    SAVORY
</NavLink>,
                  <NavLink
                    activeClassName="active"
                    ariaCurrent="true"
                    className="food-btn nutty-btn"
                    onClick={[Function]}
                    to="/nutty"
>
                    NUTTY
</NavLink>,
                ],
                "className": "navs",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "ariaCurrent": "true",
                    "children": "SWEET",
                    "className": "food-btn sweet-btn",
                    "onClick": [Function],
                    "to": "/sweet",
                  },
                  "ref": null,
                  "rendered": "SWEET",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "ariaCurrent": "true",
                    "children": "SAVORY",
                    "className": "food-btn savory-btn",
                    "onClick": [Function],
                    "to": "/savory",
                  },
                  "ref": null,
                  "rendered": "SAVORY",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "activeClassName": "active",
                    "ariaCurrent": "true",
                    "children": "NUTTY",
                    "className": "food-btn nutty-btn",
                    "onClick": [Function],
                    "to": "/nutty",
                  },
                  "ref": null,
                  "rendered": "NUTTY",
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "allState": Object {
                  "click": false,
                  "test": "testing",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/sweet",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/savory",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/nutty",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/fave",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
